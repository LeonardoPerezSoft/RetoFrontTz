{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //--------------------------------Metodo para buscar todos los productos----------------------------------------------------\n    //Url para obtener el listado de todos los productos\n    this.baseURL = \"http://localhost:8080/api/products\";\n  }\n  //Metodo para obtener lista de productos\n  obtenerListaDeProductos() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  //--------------------------------------------------------------------------------------------------------------------------\n  //--------------------------------Metodo para registrar productos ----------------------------------------------------------\n  registrarProducto(product) {\n    return this.httpClient.post(`${this.baseURL}`, product);\n  }\n  //--------------------------------Metodo para encontrar producto por Id ----------------------------------------------------------\n  obtenerEmpleadoPorId(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  //-----------------------------------Metodo para Actualizar Producto --------------------------------------------------------------\n  actualizarProducto(id, product) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, product);\n  }\n  //----------------------------------------Metodo para Eliminar Producto -----------------------------------------------------------\n  eliminarProducto(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductService };","map":{"version":3,"names":["ProductService","constructor","httpClient","baseURL","obtenerListaDeProductos","get","registrarProducto","product","post","obtenerEmpleadoPorId","id","actualizarProducto","put","eliminarProducto","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/yesid-perez/Descargas/inventoryAppFront/inventoryAppFront/src/app/product.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs'\nimport { Product } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n//--------------------------------Metodo para buscar todos los productos----------------------------------------------------\n//Url para obtener el listado de todos los productos\n  private baseURL = \"http://localhost:8080/api/products\";\n\n  constructor(private httpClient : HttpClient) { }\n \n  //Metodo para obtener lista de productos\n  obtenerListaDeProductos():Observable<Product[]>{\n    return this.httpClient.get<Product[]>(`${this.baseURL}`);\n  }\n\n//--------------------------------------------------------------------------------------------------------------------------\n\n//--------------------------------Metodo para registrar productos ----------------------------------------------------------\n\nregistrarProducto(product:Product) : Observable<Object>{\n   return this.httpClient.post(`${this.baseURL}`,product);\n}\n\n//--------------------------------Metodo para encontrar producto por Id ----------------------------------------------------------\n\nobtenerEmpleadoPorId(id:number):Observable<Product>{\n  return this.httpClient.get<Product>(`${this.baseURL}/${id}`);\n}\n\n//-----------------------------------Metodo para Actualizar Producto --------------------------------------------------------------\n\nactualizarProducto(id:number, product:Product):Observable<Object>{\n  return this.httpClient.put(`${this.baseURL}/${id}`, product);\n}\n\n\n//----------------------------------------Metodo para Eliminar Producto -----------------------------------------------------------\n\n\neliminarProducto(id:number): Observable<object>{\n  return this.httpClient.delete(`${this.baseURL}/${id}`);\n}\n\n\n}\n"],"mappings":";;AAKA,MAGaA,cAAc;EAMzBC,YAAoBC,UAAuB;IAAvB,KAAAA,UAAU,GAAVA,UAAU;IAJhC;IACA;IACU,KAAAC,OAAO,GAAG,oCAAoC;EAEP;EAE/C;EACAC,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC1D;EAEF;EAEA;EAEAG,iBAAiBA,CAACC,OAAe;IAC9B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAACI,OAAO,CAAC;EACzD;EAEA;EAEAE,oBAAoBA,CAACC,EAAS;IAC5B,OAAO,IAAI,CAACR,UAAU,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC9D;EAEA;EAEAC,kBAAkBA,CAACD,EAAS,EAAEH,OAAe;IAC3C,OAAO,IAAI,CAACL,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIO,EAAE,EAAE,EAAEH,OAAO,CAAC;EAC9D;EAGA;EAGAM,gBAAgBA,CAACH,EAAS;IACxB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;AAvCaV,cAAc,C;mBAAdA,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlB,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPrB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}